/* carcharger
 * 
 * Billing system for charging electric cars.
 * 
 * 2014 DTU
 */
package view;

import controller.GUIController;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import model.*;




/**
 *
 * @author Thor Heldager Strange
 * @version %I%, %G%
 */
public class GUI extends javax.swing.JFrame {

    LadestationTableModel ltm = new LadestationTableModel();
    ResultSetTableModel rstmForChargingStats = new ResultSetTableModel();
    GUIController controller = new GUIController();
    String editDialogMode;
    /** construktor
     * Creates new form GUI
     * @throws SQLException if an exceptions occurs
     */
    public GUI() throws SQLException {
        initComponents();
        jTable1.setModel(ltm);
        this.chargingStatsTabel.setModel(rstmForChargingStats);
        ltm.addColumn("ID"); //tilføjer en søjle ved navn "ID"
        ltm.addColumn("First name"); //tilføjer en søjle ved navn "First name"
        ltm.addColumn("Last name"); //tilføjer en søjle ved navn "Last name"
        ltm.addColumn("Balance"); //tilføjer en søjle ved navn "Balance"
        ltm.addColumn("Credit limit"); //tilføjer en søjle ved navn "Credit limit"
        ltm.addColumn("Email"); //tilføjer en søjle ved navn "Email"
        ltm.addColumn("Phone"); //tilføjer en søjle ved navn "Phone"
        controller.setGUI(this); //fortæller controlleren hvor GUIEN er
        controller.getAllCustomers(ltm); //henter alle kunderne fra databasen og sætter dem på listen i guien.
        
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        editDialog = new javax.swing.JDialog();
        editDialogIDLabel1 = new javax.swing.JLabel();
        editDialogIDField1 = new javax.swing.JTextField();
        editDialogFirstnameField1 = new javax.swing.JTextField();
        editDialogNameLabel1 = new javax.swing.JLabel();
        editDialogLastnameLabel1 = new javax.swing.JLabel();
        editDialogLastnameField1 = new javax.swing.JTextField();
        editDialogBalance = new javax.swing.JLabel();
        editDialogBalanceField = new javax.swing.JTextField();
        editDialogCreditLimitField = new javax.swing.JTextField();
        editDialogCreditLimit = new javax.swing.JLabel();
        editDialogEmailLabel = new javax.swing.JLabel();
        editDialogEmailField = new javax.swing.JTextField();
        editDialogPhoneField1 = new javax.swing.JTextField();
        editDialogObsLabel = new javax.swing.JLabel();
        editDialogPhoneLabel = new javax.swing.JLabel();
        editDialogDiscartButton = new javax.swing.JButton();
        editDialogAcceptButton = new javax.swing.JButton();
        balanceDialog = new javax.swing.JDialog();
        balanceAmountField = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        BalanceUIDLabel = new javax.swing.JLabel();
        balanceNameLabel = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        balanceOkButton = new javax.swing.JButton();
        Customer_info_tab = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        CItab_add_button = new javax.swing.JButton();
        CItab_edit_button = new javax.swing.JButton();
        CItab_delete_button = new javax.swing.JButton();
        CItab_refresh_button = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        editBalanceButton = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        chargingStatsTabel = new javax.swing.JTable();
        chargingStatsRefresh = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        testcem = new javax.swing.JButton();

        editDialogIDLabel1.setText("ID:");

        editDialogIDField1.setNextFocusableComponent(editDialogFirstnameField1);

        editDialogFirstnameField1.setNextFocusableComponent(editDialogLastnameField1);

        editDialogNameLabel1.setText("First name:");

        editDialogLastnameLabel1.setText("Last name:");

        editDialogLastnameField1.setNextFocusableComponent(editDialogEmailField);

        editDialogBalance.setText("Balance:");

        editDialogBalanceField.setNextFocusableComponent(editDialogPhoneField1);

        editDialogCreditLimitField.setNextFocusableComponent(editDialogBalanceField);

        editDialogCreditLimit.setText("Credit limit:");

        editDialogEmailLabel.setText("Email:");

        editDialogEmailField.setNextFocusableComponent(editDialogCreditLimitField);

        editDialogPhoneField1.setNextFocusableComponent(editDialogIDField1);

        editDialogObsLabel.setText("OBS eg \"-200\"");

        editDialogPhoneLabel.setText("Phone:");

        editDialogDiscartButton.setText("Discart");
        editDialogDiscartButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editDialogDiscartButtonActionPerformed(evt);
            }
        });

        editDialogAcceptButton.setText("Accept");
        editDialogAcceptButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editDialogAcceptButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout editDialogLayout = new javax.swing.GroupLayout(editDialog.getContentPane());
        editDialog.getContentPane().setLayout(editDialogLayout);
        editDialogLayout.setHorizontalGroup(
            editDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(editDialogLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(editDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(editDialogNameLabel1)
                    .addComponent(editDialogIDLabel1)
                    .addComponent(editDialogLastnameLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(editDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(editDialogLayout.createSequentialGroup()
                        .addGroup(editDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(editDialogLastnameField1)
                            .addComponent(editDialogIDField1)
                            .addComponent(editDialogFirstnameField1, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(editDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(editDialogCreditLimit)
                            .addComponent(editDialogBalance)
                            .addComponent(editDialogEmailLabel)))
                    .addComponent(editDialogDiscartButton, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(editDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(editDialogLayout.createSequentialGroup()
                        .addGroup(editDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(editDialogCreditLimitField, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(editDialogBalanceField, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(editDialogEmailField, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(editDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(editDialogLayout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(editDialogPhoneLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(editDialogPhoneField1, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(editDialogLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(editDialogObsLabel))))
                    .addComponent(editDialogAcceptButton, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        editDialogLayout.setVerticalGroup(
            editDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(editDialogLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(editDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(editDialogIDField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(editDialogIDLabel1)
                    .addComponent(editDialogEmailLabel)
                    .addComponent(editDialogEmailField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(editDialogPhoneField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(editDialogPhoneLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(editDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(editDialogNameLabel1)
                    .addComponent(editDialogFirstnameField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(editDialogCreditLimit)
                    .addComponent(editDialogCreditLimitField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(editDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(editDialogLastnameField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(editDialogBalanceField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(editDialogObsLabel)
                    .addComponent(editDialogLastnameLabel1)
                    .addComponent(editDialogBalance))
                .addGap(18, 18, 18)
                .addGroup(editDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(editDialogAcceptButton)
                    .addComponent(editDialogDiscartButton))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        balanceAmountField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                balanceAmountFieldActionPerformed(evt);
            }
        });

        jLabel1.setText("UID:");

        jLabel2.setText("Name:");

        BalanceUIDLabel.setText("jLabel3");

        balanceNameLabel.setText("jLabel4");

        jLabel5.setText("Type in the amount to be added to or");

        jLabel6.setText("removed from the customer's account");

        jLabel8.setText("eg. 50 or -100");

        balanceOkButton.setText("OK");
        balanceOkButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                balanceOkButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout balanceDialogLayout = new javax.swing.GroupLayout(balanceDialog.getContentPane());
        balanceDialog.getContentPane().setLayout(balanceDialogLayout);
        balanceDialogLayout.setHorizontalGroup(
            balanceDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(balanceDialogLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(balanceDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(balanceDialogLayout.createSequentialGroup()
                        .addGroup(balanceDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7)
                            .addGroup(balanceDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, balanceDialogLayout.createSequentialGroup()
                                    .addComponent(jLabel1)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(BalanceUIDLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, balanceDialogLayout.createSequentialGroup()
                                    .addComponent(jLabel2)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(balanceNameLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 128, Short.MAX_VALUE)))
                            .addComponent(jLabel8))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(balanceDialogLayout.createSequentialGroup()
                        .addGroup(balanceDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(balanceOkButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(balanceAmountField))
                        .addContainerGap())))
        );
        balanceDialogLayout.setVerticalGroup(
            balanceDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, balanceDialogLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(balanceDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(BalanceUIDLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(balanceDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(balanceNameLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(balanceAmountField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(balanceOkButton)
                .addGap(5, 5, 5))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        CItab_add_button.setText("Add");
        CItab_add_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CItab_add_buttonActionPerformed(evt);
            }
        });

        CItab_edit_button.setText("Edit");
        CItab_edit_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CItab_edit_buttonActionPerformed(evt);
            }
        });

        CItab_delete_button.setText("Delete");
        CItab_delete_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CItab_delete_buttonActionPerformed(evt);
            }
        });

        CItab_refresh_button.setText("Refresh");
        CItab_refresh_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CItab_refresh_buttonActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "ID", "First name", "Last name", "balance", "Credit limit", "Email", "Phone"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);
        jTable1.getColumnModel().getColumn(0).setHeaderValue("ID");
        jTable1.getColumnModel().getColumn(1).setHeaderValue("First name");
        jTable1.getColumnModel().getColumn(2).setHeaderValue("Last name");
        jTable1.getColumnModel().getColumn(3).setHeaderValue("balance");
        jTable1.getColumnModel().getColumn(4).setHeaderValue("Credit limit");
        jTable1.getColumnModel().getColumn(5).setHeaderValue("Email");
        jTable1.getColumnModel().getColumn(6).setHeaderValue("Phone");

        editBalanceButton.setText("rediger balance");
        editBalanceButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editBalanceButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(CItab_add_button, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(CItab_edit_button, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(CItab_delete_button, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(CItab_refresh_button, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 746, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(editBalanceButton, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CItab_add_button)
                    .addComponent(CItab_edit_button)
                    .addComponent(CItab_delete_button)
                    .addComponent(CItab_refresh_button))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(editBalanceButton)
                .addContainerGap(98, Short.MAX_VALUE))
        );

        Customer_info_tab.addTab("Customer info", jPanel1);

        chargingStatsTabel.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane2.setViewportView(chargingStatsTabel);

        chargingStatsRefresh.setText("refresh");
        chargingStatsRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chargingStatsRefreshActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(chargingStatsRefresh)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(304, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(chargingStatsRefresh)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(164, Short.MAX_VALUE))
        );

        Customer_info_tab.addTab("Charging stats", jPanel2);

        testcem.setText("test af customerErrorMsg(String msg)");
        testcem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                testcemActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(testcem)
                .addContainerGap(543, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(testcem)
                .addContainerGap(584, Short.MAX_VALUE))
        );

        Customer_info_tab.addTab("test_tab", jPanel3);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Customer_info_tab)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Customer_info_tab)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * knap i editDialog til at lukke uden at gemmen(uden at opdatere/oprette i databasen);
     */
    private void editDialogDiscartButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editDialogDiscartButtonActionPerformed
        // TODO add your handling code here:
        editDialog.setVisible(false); //editDialog gør editDialog synlig
    }//GEN-LAST:event_editDialogDiscartButtonActionPerformed

    /**
     *  knap i editDialog til at opdatere/tilføje kunden til databasen.
     */
    private void editDialogAcceptButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editDialogAcceptButtonActionPerformed
        // TODO add your handling code here:
        Customer tempCustomer = new Customer(editDialogIDField1.getText(), editDialogFirstnameField1.getText(), editDialogLastnameField1.getText(), Double.parseDouble(editDialogBalanceField.getText()), Double.parseDouble(editDialogCreditLimitField.getText()) , editDialogEmailField.getText(), editDialogPhoneField1.getText(), "123");
        controller.editCustomer(tempCustomer,editDialogMode);
        controller.getAllCustomers(ltm);
        //sendtodb(tempCustomer);
        editDialog.setVisible(false);
    }//GEN-LAST:event_editDialogAcceptButtonActionPerformed

    /**
     * to be deleted
     */
    private void balanceAmountFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_balanceAmountFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_balanceAmountFieldActionPerformed

    /**
     * knap man trykker på for at opdatere kundens balance. 
     */
    private void balanceOkButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_balanceOkButtonActionPerformed
        // TODO add your handling code here:
        String UID = this.BalanceUIDLabel.getText(); //henter kundens UID ud af BalanceUIDLabel
        Customer tempCustomer = this.controller.getCustomer(UID); //henter kunden fra databasen
        double newBalance = tempCustomer.getBalance() + Double.valueOf(balanceAmountField.getText()); //lægger kundens nyværende balance og ændring af balancen sammen.
        tempCustomer.setBalance(newBalance); //sætter den nye balance i den midlertidige kunde
        controller.editCustomer(tempCustomer, "edit"); //updatere den midlertidige kunde i databasen
        balanceAmountField.setText(""); //fjerner teksten i balanceAmountField
        balanceDialog.setVisible(false); //gør balanceDialog usynelig.
        controller.getAllCustomers(ltm); //updatere ltm med alle kunderne.
    }//GEN-LAST:event_balanceOkButtonActionPerformed

     /**
     * to be deleted
     */
    private void testcemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_testcemActionPerformed
        // TODO add your handling code here:
        customerErrorMsg("hej");
    }//GEN-LAST:event_testcemActionPerformed

     /**
     * knap til at hente charging stats fra databasen. 
     */
    private void chargingStatsRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chargingStatsRefreshActionPerformed
        // TODO add your handling code here:
        controller.getChargingStats(rstmForChargingStats); //henter alle data om opladningerne fra databasen
    }//GEN-LAST:event_chargingStatsRefreshActionPerformed

    /**
     *  knap til at få balanceDialog frem.
     */
    private void editBalanceButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editBalanceButtonActionPerformed
        // TODO add your handling code here:
        int selectedRow = this.jTable1.getSelectedRow();

        if (selectedRow!=-1){ //kontrollere at der er valgt en kunden på listen.

            String UID = (String) this.jTable1.getValueAt(selectedRow, 0); //får UID ud af jTabel1 og gemmer det som en String
            Customer tempCustomer = this.controller.getCustomer(UID); //henter en customer fra databasen
            this.BalanceUIDLabel.setText(UID); //sætter teksten i BalanceUIDLabel
            this.balanceNameLabel.setText(tempCustomer.getFirstName()+" "+tempCustomer.getLastName()); //sætter teksten i BalanceNameLabel
            balanceDialog.setVisible(true);
            balanceDialog.pack();
        }else //hvis der ikke er valgt en kunde sker dette.
        {
            customerErrorMsg("make sure to select a customer."); //meddelse til kunden om at vælge en kunde.
        }
    }//GEN-LAST:event_editBalanceButtonActionPerformed

    /**
     * to be deleted, have been used to get the updated database.
     */
    private void CItab_refresh_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CItab_refresh_buttonActionPerformed
        if(ask("If you refresh change will be lost","fetch","do not fetch"))
        {
            controller.getAllCustomers(ltm);
        }
    }//GEN-LAST:event_CItab_refresh_buttonActionPerformed

    /**
     * knap til at slette den valgte kunde. 
     */
    private void CItab_delete_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CItab_delete_buttonActionPerformed
        // TODO add your handling code here:
        int selectedRow = this.jTable1.getSelectedRow();
        if (selectedRow!=-1){ //kontrollere at der er valgt en kunden på listen.
            String UID = (String) this.jTable1.getValueAt(selectedRow, 0);
            if(ask("Do you want to delete the selected customer?", "yes", "no")){
                controller.deleteCustomer(UID);// sletter kunden i databasen
                controller.getAllCustomers(ltm);// 
            }
        }else //hvis der ikke er valgt en kunde sker dette.
        {
            customerErrorMsg("make sure to select a customer."); //meddelse til kunden om at vælge en kunde.
        }
    }//GEN-LAST:event_CItab_delete_buttonActionPerformed

    /**
     * kanp til at redigere den valgte kunde. 
     */
    private void CItab_edit_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CItab_edit_buttonActionPerformed
        // TODO add your handling code here:
        int selectedRow = this.jTable1.getSelectedRow(); //hvilken plads in jtable1 der er valgt.
        if (selectedRow!=-1){ //kontrollere at der er valgt en kunden på listen.
            String UID = (String) this.jTable1.getValueAt(selectedRow, 0); //laver selectedRow om til en String.
            Customer tempCustomer = this.controller.getCustomer(UID); //laver et customer objekt uf fra customer modelen.
            this.editDialogIDField1.setText(tempCustomer.getUID()); //sætter kundens information in i de forskælling Fields
            this.editDialogFirstnameField1.setText(tempCustomer.getFirstName()); //sætter kundens information in i de forskælling Fields
            this.editDialogLastnameField1.setText(tempCustomer.getLastName()); //sætter kundens information in i de forskælling Fields
            this.editDialogBalanceField.setText(String.valueOf(tempCustomer.getBalance())); //sætter kundens information in i de forskælling Fields
            this.editDialogCreditLimitField.setText(String.valueOf(tempCustomer.getCreditLimit())); //sætter kundens information in i de forskælling Fields
            this.editDialogEmailField.setText(tempCustomer.getEmail()); //sætter kundens information in i de forskælling Fields
            this.editDialogPhoneField1.setText(tempCustomer.getTlf()); //sætter kundens information in i de forskælling Fields
            this.editDialogIDField1.setEditable(false); //gør så man ikke kan redigere i IDField1
            this.editDialogBalanceField.setEditable(false); //gør så man ikke kan redigere i BalanceField
            setEditDialogMode("edit"); //dialogen ved at informationen skal bruges til at updatere en kunden
            editDialog.setVisible(true); //gør så man kan se dialogen
            editDialog.pack(); //får dialogen til at fylde det den skal.
        }else //hvis der ikke er valgt en kunde sker dette.
        {
            customerErrorMsg("make sure to select a customer."); //meddelse til kunden om at vælge en kunde.
        }
    }//GEN-LAST:event_CItab_edit_buttonActionPerformed

    /**
     * knap til at tilføje en kunde til databasen. 
     */
    private void CItab_add_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CItab_add_buttonActionPerformed
        // TODO add your handling code here:
        editDialogClearInputFields(); //tømmer alle input felter
        setEditDialogMode("add"); //dialogen ved at informationen skal bruges til at oprette en ny kunden
        editDialog.setVisible(true);
        editDialog.pack(); //gør så man kan se dialogen
        this.editDialogIDField1.setEditable(true); //gør så man kan redigere i IDField1
        this.editDialogBalanceField.setEditable(true); //gør så man kan redigere i BalanceField
    }//GEN-LAST:event_CItab_add_buttonActionPerformed
;
    /**
     * ask the user a question
     * @param question the question the user should answer
     * @param trueanswer the answer that will return true.
     * @param falseanswer the answer that will return false.
     * @return true if the user press the trueanswer and the other way around.
     */
    private boolean ask(String question, String trueanswer, String falseanswer)
    {
        Object[] options = {trueanswer,
                    falseanswer};
        int n = JOptionPane.showOptionDialog(null,
            question,
            "A Silly Question",
            JOptionPane.YES_NO_OPTION,
            JOptionPane.QUESTION_MESSAGE,
            null,     //do not use a custom Icon
            options,  //the titles of buttons
            options[0]); //default button title
        return (n == 0);
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new GUI().setVisible(true);
                } catch (SQLException ex) {
                    Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel BalanceUIDLabel;
    private javax.swing.JButton CItab_add_button;
    private javax.swing.JButton CItab_delete_button;
    private javax.swing.JButton CItab_edit_button;
    private javax.swing.JButton CItab_refresh_button;
    private javax.swing.JTabbedPane Customer_info_tab;
    private javax.swing.JTextField balanceAmountField;
    private javax.swing.JDialog balanceDialog;
    private javax.swing.JLabel balanceNameLabel;
    private javax.swing.JButton balanceOkButton;
    private javax.swing.JButton chargingStatsRefresh;
    private javax.swing.JTable chargingStatsTabel;
    private javax.swing.JButton editBalanceButton;
    private javax.swing.JDialog editDialog;
    private javax.swing.JButton editDialogAcceptButton;
    private javax.swing.JLabel editDialogBalance;
    private javax.swing.JTextField editDialogBalanceField;
    private javax.swing.JLabel editDialogCreditLimit;
    private javax.swing.JTextField editDialogCreditLimitField;
    private javax.swing.JButton editDialogDiscartButton;
    private javax.swing.JTextField editDialogEmailField;
    private javax.swing.JLabel editDialogEmailLabel;
    private javax.swing.JTextField editDialogFirstnameField1;
    private javax.swing.JTextField editDialogIDField1;
    private javax.swing.JLabel editDialogIDLabel1;
    private javax.swing.JTextField editDialogLastnameField1;
    private javax.swing.JLabel editDialogLastnameLabel1;
    private javax.swing.JLabel editDialogNameLabel1;
    private javax.swing.JLabel editDialogObsLabel;
    private javax.swing.JTextField editDialogPhoneField1;
    private javax.swing.JLabel editDialogPhoneLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JButton testcem;
    // End of variables declaration//GEN-END:variables

    /**
     * sletter alt i input fields, så de er klar til brug.
     */
    private void editDialogClearInputFields() {
        editDialogIDField1.setText("");
        editDialogFirstnameField1.setText("");
        editDialogLastnameField1.setText("");
        editDialogEmailField.setText("");
        editDialogCreditLimitField.setText("");
        editDialogBalanceField.setText("");
        editDialogPhoneField1.setText("");
        
    }

    /**
     * 
     * @param mode should be set to ether "edit" or "add" and is used to determine if a customer should be add as a new customer in the database or if the customer is a updater of an existing customer in the database.
     */
    private void setEditDialogMode(String mode) {
        editDialogMode = mode;
        }
    
    /**
     * for giving a error to the user
     * @param msg is the message in a String.
     */
    public void customerErrorMsg(String msg) {
        JOptionPane.showMessageDialog(null, msg);
        }
}

